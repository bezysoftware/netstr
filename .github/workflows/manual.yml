name: Manual Deployment

run-name: ${{ format('Manual deploy of {0} to {1}', inputs.version, inputs.environment) }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy to
        options:
        - dev
        - prod
      source:
        type: choice
        description: Source repository
        options:
        - dockerhub
        - ghcr
      version:
        description: Version to deploy
        required: true

env:
  dockerhub: ""
  ghcr: "ghcr.io/"
  port_dev: 8081
  port_prod: 8080
  long_env_dev: Development

jobs:
  deploy:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print variables
        run: | 
          echo "environment is ${{ inputs.environment }}"
          echo "version is ${{ inputs.version }}"
          echo "source is ${{ env[inputs.source] }}"
          echo "port is ${{ env[format('port_{0}', inputs.environment)] }}"
          echo "long environment is is ${{ env[format('long_env_{0}', inputs.environment)] }}"

      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Create docker context
        run: docker context create remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_REMOTE_HOST }}"
        
      - name: Docker compose up
        run: |
          docker --context remote compose pull
          docker --context remote compose up -d
        env:
          NETSTR_DB_PASSWORD: ${{ secrets.NETSTR_DB_PASSWORD }}
          NETSTR_IMAGE: "${{ env[inputs.source] }}bezysoftware/netstr:${{ inputs.version }}"
          NETSTR_ENVIRONMENT: ${{ inputs.environment }}
          NETSTR_PORT: ${{ env[format('port_{0}', inputs.environment)] }}
          NETSTR_ENVIRONMENT_LONG: ${{ env[format('long_env_{0}', inputs.environment)] }}