name: Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v4

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: bezysoftware
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get docker tag
        if: github.event_name != 'pull_request'
        run: |
            echo "${GITHUB_REF##*/}"
            if [[ "${GITHUB_REF##*/}" == "main" ]]; then
                echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            else
                echo "IMAGE_TAG=${GITHUB_REF##*/}-${GITHUB_SHA}" >> $GITHUB_ENV
            fi

      - name: Get docker tag (PR)
        if: github.event_name == 'pull_request'
        run: |
            echo "${GITHUB_HEAD_REF##*/}"
            echo "IMAGE_TAG=${GITHUB_HEAD_REF##*/}-${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/bezysoftware/netstr:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: |
            echo ${{ steps.docker_build.outputs.digest }}
            echo ghcr.io/bezysoftware/netstr:${{ env.IMAGE_TAG }}